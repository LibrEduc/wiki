Blockly@rduino est un programme web, un **webware graphique permettant la programmation graphique pour [[http://www.arduino.cc/|Arduino]] et sa //traduction en code//**.

{{  https://raw.githubusercontent.com/technologiescollege/Blockly-at-rduino/master/documentation/CaptureEN.JPG?nolink&591x388  }}

Blockly@rduino est basé sur [[https://developers.google.com/blockly/|Blockly]], un éditeur de programme graphique par une interface web. Il fournit un seul type de traduction de la programmation graphique //(contrairement à Blockly qui traduit en Python, en JavaScript, etc et permet de le simuler en ligne : [[http://www.technologiescollege.fr/blockly/apps/code/index.html|exemple]])//, pour générer du code à copier coller dans l'IDE Arduino.

Blockly@rduino possède une bibliothèque de blocs pour les modules [[http://www.seeedstudio.com/wiki/GROVE_System|Grove]], particulièrement adaptée à la découverte des micro-contrôleurs et aux expérimentations de systèmes mécatroniques.

Cette version a été françisée et réorganisée pour la faire utiliser au mieux par des élèves débutants dans le code.

**//Toutes les remarques sont les bienvenues pour améliorer la syntaxe !// **

<font 18px/inherit;;inherit;;inherit>** Lien de téléchargement :  **  ** https://github.com/technologiescollege/BlocklyDuino]]  **</font>

===== Fonctions =====

  * programmation pour Arduino en drag'n'drop graphique,
  * génère un code totalement compatible avec le code Arduino,
  * interaction des cartes Arduino grâce aux modules Grove rajoutés : plus de 10 blocs spécifiques à des capteurs/actionneurs Grove,
  * possibilité de charger automatiquement des fichiers sur le site grâce aux paramètres de l'adresse URL //(voir les démos ci-dessous).//

===== ATTENTION pour le téléversement =====

Pour le téléversement dans la carte Arduino directement depuis le navigateur, il faut installer le plugin Codebender : [[https://codebender.cc/static/plugin|https://codebender.cc/static/plugin]]

=====   =====

===== Démos =====

Blockly@rduino est un outil web, un webware par référence aux software, hardware, etc. Vous pouvez le tester/utiliser à l'adresse suivante : [[http://www.technologiescollege.fr/blocklyduino/apps/blocklyduino/index.html|Technologies/BlocklyDuino]]

Vous pouvez donc aussi lier directement l'ouverture de la page à l'ouverture d'un fichier XML hébergé (//ou tout en local//) :

  * [[http://www.technologiescollege.fr/blocklyduino/apps/blocklyduino/index.html?url=/blocklyduino/apps/blocklyduino/exemples/blink.xml|démo 1 : faire clignoter une diode]]
  * [[http://www.technologiescollege.fr/blocklyduino/apps/blocklyduino/index.html?url=/blocklyduino/apps/blocklyduino/exemples/servo_potentio.xml|démo 2 : faire varier un servo-moteur proportionnellement à une consigne de potentiomètre]]

Le créateur de BlocklyDuino a aussi posté une [[http://www.youtube.com/watch?v=_swiyXcUvNY|vidéo]].

===== Utiliser en local dans son navigateur web =====

Si vous préférez l'utiliser en local, il vous suffit de télécharger le code depuis Github (//[[https://github.com/technologiescollege/BlocklyDuino/archive/master.zip|Download Zip]]//) et d'ouvrir le fichier ''index.html''  dans votre navigateur.

Vous pouvez l'héberger sur un serveur, et ainsi y faire accéder de nombreux postes en pointant vers ce fichier 'index.html'.

===== Utilisation en 4 temps =====

  - utiliser votre navigateur pour ouvrir Blockly@rduino grâce au fichier 'index.html'
  - créer son programme Arduino par drag'n'drop (//cliqué-déplacé//) des blocs
  - sélectionner l'onglet 'Arduino' pour en copier le contenu dans l'[[https://github.com/technologiescollege/arduino|IDE]][[https://github.com/technologiescollege/arduino| Arduino]]
  - presser le bouton 'Téléverser' pour transférer le code dans la mémoire de la carte Arduino

===== Auteurs et contributeurs =====

Fred Lin (@gasolin). Merci à Neil Fraser, Q.Neutron de Blockly [[http://code.google.com/p/blockly/|http://code.google.com/p/blockly/]]. Merci à l'équipe d'Arduino et Seeeduino pour les blocs spécifiques. Ce projet s'est aussi inspiré de [[https://github.com/taweili/ardublock|arduiblock]] et [[http://www.modk.it/|modkit]]. Améliorations par Julien Rat. Modifications, simplifications et françisation par Sébastien Canet. Fonctionnalités accrues par Olivier Métayer.

